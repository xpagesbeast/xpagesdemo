<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xc="http://www.ibm.com/xsp/custom">

	<xc:heading headingTitle="XPages/JSF Events"
		headingDescription="Exploring XPages EventHandler and JSF actions"
		pageName="Events">
	</xc:heading>
	<div class="row">
		<div class="col-lg-12">
			<xp:label value="#{pageBean.label}" id="label2"></xp:label>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-4">
			<div class="panel panel-yellow" >
				<div class="panel-heading">
					<h3 class="panel-title">Actions using immediate="true"</h3>
				</div>
				<div class="panel-body" style="min-height:300px;">
					This UI Component has an EventHandler to bypass validation. <br /> <br />This example also uses a Action Listener bound to the pageBean.
					<pre style="margin-top:5px;min-height:150px;">
						<xp:text escape="true" id="computedField1">
							<xp:this.value><![CDATA[#{'<eventHandler event=onclick submit=true 
actionListener={pageBean.listen} action={pageBean.doTask} 
immediate=true>
</eventHandler>'}]]></xp:this.value>
						</xp:text>
					</pre>
					<p>The Date in the Welcome banner and xp:label update, User Message is set from Java FacesContext.</p>
				</div>
				<div class="panel-footer">
					<xp:button value="Uses Immediate" id="button1">
						<xp:eventHandler event="onclick" submit="true"
							actionListener="#{pageBean.listen}" action="#{pageBean.doTask}"
							immediate="true">
						</xp:eventHandler>
					</xp:button>
				</div>
			</div>
		</div> <!--  end column -->

		<div class="col-sm-4">
			<div class="panel panel-green" >
				<div class="panel-heading">
					<h3 class="panel-title">Actions using full lifecycle</h3>
				</div>
				<div class="panel-body" style="min-height:300px;">
					This UI Component has an EventHandler to take the page through the
					full JSF lifecycle. <br /> This example also uses a Action Listener bound to the pageBean.
					<pre style="margin-top:5px;min-height:150px;">
						<xp:text escape="true" id="computedField2">
							<xp:this.value><![CDATA[#{'<eventHandler event=onclick submit=true
actionListener={pageBean.listen} action={pageBean.doTask}>
</eventHandler>'}]]></xp:this.value>
						</xp:text>
					</pre>
					<p>The Date in the Welcome banner and xp:label update, User Message is set from Java FacesContext.</p>
                </div>
				<div class="panel-footer">
					<xp:button value="Uses Full Cycle" id="button2">
						<xp:eventHandler event="onclick" submit="true"
							actionListener="#{pageBean.listen}" action="#{pageBean.doTask}"
							navigate="true">
						</xp:eventHandler>
					</xp:button>
				</div>
			</div>
		</div> <!--  end column -->

		<div class="col-sm-4">
			<div class="panel panel-info" >
				<div class="panel-heading">
					<h3 class="panel-title">Actions using AJAX/PartialRefresh</h3>
				</div>
				<div class="panel-body" style="min-height:300px;">
					This UI Component has an EventHandler uses the onStart, onError and
					onComplete. <br /> This example also uses a Action Listener bound to the pageBean.
					<pre style="margin-top:5px;min-height:150px;">
						<xp:text escape="true" id="computedField3">
							<xp:this.value><![CDATA[#{'<eventHandler event=onclick submit=true
actionListener={pageBean.listen} action={pageBean.doTask}
refreshMode=partial refreshId=label2>
<onStart>alert("onStart");</onStart>
<onError>alert("onError");</onError>
<onComplete>alert("onComplete")</onComplete>
</eventHandler>'}]]></xp:this.value>
						</xp:text>
					</pre>
					<p>The Date and User Message are not updated because they are not in scope of partial refresh.</p>
                </div>
				<div class="panel-footer">
					<xp:button value="Uses PartialRefresh" id="button3">
						<xp:eventHandler event="onclick" submit="true"
							actionListener="#{pageBean.listen}" action="#{pageBean.doTask}"
							navigate="true" refreshMode="partial" refreshId="label2">
							<xp:this.onStart><![CDATA[alert("onStart");]]></xp:this.onStart>
							<xp:this.onError><![CDATA[alert("onError");]]></xp:this.onError>
							<xp:this.onComplete><![CDATA[alert("onComplete");]]></xp:this.onComplete>
						</xp:eventHandler>
					</xp:button>
				</div>
			</div>
		</div> <!--  end column -->
		
		<div class="col-sm-4">
			<div class="panel panel-danger" >
				<div class="panel-heading">
					<h3 class="panel-title">Actions using Action Listener</h3>
				</div>
				<div class="panel-body" style="min-height:300px;">
					This UI Component has an EventHandler to take the page through the
					full JSF lifecycle. <br /> This example also uses a Action Listener interface needs immediate=true.
					<pre style="margin-top:5px;min-height:150px;">
						<xp:text escape="true" id="computedField4">
							<xp:this.value><![CDATA[#{'<eventHandler event=onclick submit=true immediate=true
action=pageBean.doTask>
	<actionListener	
		type=com.xpagesbeast.listeners.CustomerListener>
	<actionListener>
	<actionListener>
type=com.xpagesbeast.listeners.LoadOrdersListener>
	<actionListener>
</eventHandler>'}]]></xp:this.value>
						</xp:text>
					</pre>
					<p>The Date in the Welcome banner and xp:label update, User Message is set from Java FacesContext.</p>
                </div>
				<div class="panel-footer">
					<xp:button value="Uses Full Cycle" id="button4">
						<!-- if action listeners are outside the eventHandler, it will not be registered in JSF lifecycle -->
						<xp:eventHandler event="onclick" submit="true" immediate="true"
							action="#{pageBean.doTask}">
							<xp:this.actionListeners>
							<xp:actionListener
								type="com.xpagesbeast.listeners.CustomerListener">
							</xp:actionListener>
							<xp:actionListener
								type="com.xpagesbeast.listeners.LoadOrdersListener">
							</xp:actionListener>
						</xp:this.actionListeners>
						</xp:eventHandler>
					</xp:button>
				</div>
			</div>
		</div>
		
		
		<div class="col-sm-4">
			<div class="panel panel-default" >
				<div class="panel-heading">
					<h3 class="panel-title">Actions using Action Listener with Arguments</h3>
				</div>
				<div class="panel-body" style="min-height:300px;">
					This UI Component has an EventHandler to take the page through the
					full JSF lifecycle. <br /> This example also uses a Action Listener interface needs immediate=true.
					<pre style="margin-top:5px;min-height:150px;">
						<xp:text escape="true" id="computedField5">
							<xp:this.value><![CDATA[#{'<eventHandler event=onclick submit=true immediate=true
action=pageBean.doTask>
	<actionListener	
		type=com.xpagesbeast.listeners.CustomerListener>
	<actionListener>
	<actionListener>
type=com.xpagesbeast.listeners.LoadOrdersListener>
	<actionListener>
</eventHandler>
<parameter name="orderNumber" value="85974"></parameter>
<parameter name="customerId" value="657474"><parameter>'}]]></xp:this.value>
						</xp:text>
					</pre>
					<p>The Date in the Welcome banner and xp:label update, User Message is set from Java FacesContext.</p>
                </div>
				<div class="panel-footer">
					<xp:button value="Uses Full Cycle" id="button5">
						<!-- if action listeners are outside the eventHandler, it will not be registered in JSF lifecycle -->
						<xp:eventHandler event="onclick" submit="true" immediate="true" action="#{pageBean.doTask}">
							<xp:this.actionListeners>
							<xp:actionListener type="com.xpagesbeast.listeners.CustomerListener">
							</xp:actionListener>
							<xp:actionListener type="com.xpagesbeast.listeners.LoadOrdersListener">
							</xp:actionListener>
						</xp:this.actionListeners>
						<xp:this.parameters><xp:parameter name="orderNumber" value="85974"></xp:parameter><xp:parameter name="customerId" value="657474"></xp:parameter></xp:this.parameters></xp:eventHandler>
					</xp:button>
				</div>
			</div>
		</div>
		
		
	</div><!--  ends row -->

</xp:view>
